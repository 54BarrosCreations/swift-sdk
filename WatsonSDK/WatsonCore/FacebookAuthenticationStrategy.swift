/**
 * Copyright IBM Corporation 2015
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 **/

import Foundation
import Alamofire

/**
* FacebookAuthenticationStrategy will authenticate using a provided Facebook OAuth token
* generated by the Facebook Login SDK. 
*/
class FacebookAuthenticationStrategy: AuthenticationStrategy {
    
    var token: String?
    
    let tokenURL: String!
    var fbToken: String!
 
    
    /**
     <#Description#>
     
     - parameter fbToken: Facebook OAuth token generated by the Facebook Login SDK
     
     */
    init(tokenURL: String, fbToken: String) {
        
        self.fbToken = fbToken
        self.tokenURL = tokenURL
        
    }
    
    /**
     Fetches a token at
     http://localhost:3000/authorization/api/v1/token?fbToken=XXX&service
     
     - parameter completionHandler: <#completionHandler description#>
     - parameter error:             <#error description#>
     */
    func getToken(completionHandler: (token: String?, error: NSError?) -> Void) {
        
        let url = "\(tokenURL)?fbtoken=\(fbToken)"
        
        Alamofire.request(.GET, url)
            .responseString {
                
                response in
                
                
                if let watsonToken = response.result.value {
                    
                    self.token = watsonToken
                    completionHandler(token: self.token, error: nil)
                } else {
                    completionHandler(token: nil,
                        error: NSError.createWatsonError(400, description: "Could not get token"))
                }
                
                
        }
        
    }

    
}